"""init

Revision ID: d00f4c492448
Revises: 
Create Date: 2022-05-08 13:09:45.048754

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd00f4c492448'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('logs',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('operation', sa.VARCHAR(), nullable=False),
    sa.Column('table', sa.VARCHAR(), nullable=False),
    sa.Column('new_value', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('old_value', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), server_default='Без имени', nullable=False),
    sa.Column('middle_name', sa.VARCHAR(), server_default='', nullable=False),
    sa.Column('last_name', sa.VARCHAR(), server_default='', nullable=False),
    sa.Column('fio', sa.VARCHAR(), nullable=True),
    sa.Column('gender', sa.VARCHAR(), nullable=True),
    sa.Column('birth_date', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.VARCHAR(), server_default='active', nullable=True),
    sa.Column('values', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False),
    sa.Column('creator_id', sa.BIGINT(), nullable=True),
    sa.Column('updater_id', sa.BIGINT(), nullable=True),
    sa.Column('deleter_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deleter_id'], ['users.id'], name='usersdeleter_id_fkey'),
    sa.ForeignKeyConstraint(['updater_id'], ['users.id'], name='usersupdater_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organizations',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default='active', nullable=True),
    sa.Column('creator_id', sa.BIGINT(), nullable=True),
    sa.Column('updater_id', sa.BIGINT(), nullable=True),
    sa.Column('deleter_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], name='organizationscreator_id_fkey'),
    sa.ForeignKeyConstraint(['deleter_id'], ['users.id'], name='organizationsdeleter_id_fkey'),
    sa.ForeignKeyConstraint(['updater_id'], ['users.id'], name='organizationsupdater_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rights',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default='active', nullable=True),
    sa.Column('creator_id', sa.BIGINT(), nullable=True),
    sa.Column('updater_id', sa.BIGINT(), nullable=True),
    sa.Column('deleter_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], name='rightscreator_id_fkey'),
    sa.ForeignKeyConstraint(['deleter_id'], ['users.id'], name='rightsdeleter_id_fkey'),
    sa.ForeignKeyConstraint(['updater_id'], ['users.id'], name='rightsupdater_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('values', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default='active', nullable=True),
    sa.Column('creator_id', sa.BIGINT(), nullable=True),
    sa.Column('updater_id', sa.BIGINT(), nullable=True),
    sa.Column('deleter_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deleter_id'], ['users.id'], name='rolesdeleter_id_fkey'),
    sa.ForeignKeyConstraint(['updater_id'], ['users.id'], name='rolesupdater_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('running_scripts',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('script_name', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('script', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('actions', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('values', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default='active', nullable=True),
    sa.Column('creator_id', sa.BIGINT(), nullable=True),
    sa.Column('updater_id', sa.BIGINT(), nullable=True),
    sa.Column('deleter_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deleter_id'], ['users.id'], name='running_scriptsdeleter_id_fkey'),
    sa.ForeignKeyConstraint(['updater_id'], ['users.id'], name='running_scriptsupdater_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scripts',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('values', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False),
    sa.Column('version', sa.INTEGER(), server_default='1', nullable=True),
    sa.Column('status', sa.VARCHAR(), server_default='active', nullable=True),
    sa.Column('creator_id', sa.BIGINT(), nullable=True),
    sa.Column('updater_id', sa.BIGINT(), nullable=True),
    sa.Column('deleter_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deleter_id'], ['users.id'], name='scriptsdeleter_id_fkey'),
    sa.ForeignKeyConstraint(['updater_id'], ['users.id'], name='scriptsupdater_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('actions',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('script_id', sa.BIGINT(), nullable=False),
    sa.Column('values', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default='active', nullable=True),
    sa.Column('creator_id', sa.BIGINT(), nullable=True),
    sa.Column('updater_id', sa.BIGINT(), nullable=True),
    sa.Column('deleter_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deleter_id'], ['users.id'], name='actionsdeleter_id_fkey'),
    sa.ForeignKeyConstraint(['script_id'], ['scripts.id'], ),
    sa.ForeignKeyConstraint(['updater_id'], ['users.id'], name='actionsupdater_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('histories_scripts',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('script_id', sa.BIGINT(), nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=False),
    sa.Column('creator_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['script_id'], ['scripts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles_rights',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.BIGINT(), nullable=False),
    sa.Column('right_id', sa.VARCHAR(), nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default='active', nullable=True),
    sa.Column('creator_id', sa.BIGINT(), nullable=True),
    sa.Column('updater_id', sa.BIGINT(), nullable=True),
    sa.Column('deleter_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deleter_id'], ['users.id'], name='roles_rightsdeleter_id_fkey'),
    sa.ForeignKeyConstraint(['right_id'], ['rights.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['updater_id'], ['users.id'], name='roles_rightsupdater_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('unique_roles_rights_pare_id', 'roles_rights', ['right_id', 'role_id'], unique=True, postgresql_where=sa.text("status = 'active'"))
    op.create_table('running_actions',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('running_script_id', sa.BIGINT(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('action', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('values', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default='active', nullable=True),
    sa.Column('creator_id', sa.BIGINT(), nullable=True),
    sa.Column('updater_id', sa.BIGINT(), nullable=True),
    sa.Column('deleter_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deleter_id'], ['users.id'], name='running_actionsdeleter_id_fkey'),
    sa.ForeignKeyConstraint(['running_script_id'], ['running_scripts.id'], ),
    sa.ForeignKeyConstraint(['updater_id'], ['users.id'], name='running_actionsupdater_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scripts_organizations',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.BIGINT(), nullable=False),
    sa.Column('script_id', sa.BIGINT(), nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default='active', nullable=True),
    sa.Column('creator_id', sa.BIGINT(), nullable=True),
    sa.Column('updater_id', sa.BIGINT(), nullable=True),
    sa.Column('deleter_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deleter_id'], ['users.id'], name='scripts_organizationsdeleter_id_fkey'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['script_id'], ['scripts.id'], ),
    sa.ForeignKeyConstraint(['updater_id'], ['users.id'], name='scripts_organizationsupdater_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('unique_scripts_organizations_pare_id', 'scripts_organizations', ['organization_id', 'script_id'], unique=True, postgresql_where=sa.text("status = 'active'"))
    op.create_table('scripts_users',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('script_id', sa.BIGINT(), nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default='active', nullable=True),
    sa.Column('creator_id', sa.BIGINT(), nullable=True),
    sa.Column('updater_id', sa.BIGINT(), nullable=True),
    sa.Column('deleter_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deleter_id'], ['users.id'], name='scripts_usersdeleter_id_fkey'),
    sa.ForeignKeyConstraint(['script_id'], ['scripts.id'], ),
    sa.ForeignKeyConstraint(['updater_id'], ['users.id'], name='scripts_usersupdater_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('unique_scripts_users_pare_id', 'scripts_users', ['user_id', 'script_id'], unique=True, postgresql_where=sa.text("status = 'active'"))
    op.create_table('users_organizations',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.BIGINT(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default='active', nullable=True),
    sa.Column('creator_id', sa.BIGINT(), nullable=True),
    sa.Column('updater_id', sa.BIGINT(), nullable=True),
    sa.Column('deleter_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deleter_id'], ['users.id'], name='users_organizationsdeleter_id_fkey'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['updater_id'], ['users.id'], name='users_organizationsupdater_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('unique_users_organizations_pare_id', 'users_organizations', ['organization_id', 'user_id'], unique=True, postgresql_where=sa.text("status = 'active'"))
    op.create_table('users_roles',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.BIGINT(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default='active', nullable=True),
    sa.Column('creator_id', sa.BIGINT(), nullable=True),
    sa.Column('updater_id', sa.BIGINT(), nullable=True),
    sa.Column('deleter_id', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deleter_id'], ['users.id'], name='users_rolesdeleter_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['updater_id'], ['users.id'], name='users_rolesupdater_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('unique_users_roles_pare_id', 'users_roles', ['user_id', 'role_id'], unique=True, postgresql_where=sa.text("status = 'active'"))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('unique_users_roles_pare_id', table_name='users_roles', postgresql_where=sa.text("status = 'active'"))
    op.drop_table('users_roles')
    op.drop_index('unique_users_organizations_pare_id', table_name='users_organizations', postgresql_where=sa.text("status = 'active'"))
    op.drop_table('users_organizations')
    op.drop_index('unique_scripts_users_pare_id', table_name='scripts_users', postgresql_where=sa.text("status = 'active'"))
    op.drop_table('scripts_users')
    op.drop_index('unique_scripts_organizations_pare_id', table_name='scripts_organizations', postgresql_where=sa.text("status = 'active'"))
    op.drop_table('scripts_organizations')
    op.drop_table('running_actions')
    op.drop_index('unique_roles_rights_pare_id', table_name='roles_rights', postgresql_where=sa.text("status = 'active'"))
    op.drop_table('roles_rights')
    op.drop_table('histories_scripts')
    op.drop_table('actions')
    op.drop_table('scripts')
    op.drop_table('running_scripts')
    op.drop_table('roles')
    op.drop_table('rights')
    op.drop_table('organizations')
    op.drop_table('users')
    op.drop_table('logs')
    # ### end Alembic commands ###
